<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Leo Gallucci's blog]]></title>
  <link href="http://elgalu.github.io/atom.xml" rel="self"/>
  <link href="http://elgalu.github.io/"/>
  <updated>2015-02-10T21:57:55-03:00</updated>
  <id>http://elgalu.github.io/</id>
  <author>
    <name><![CDATA[Leo Gallucci]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Run protractor against Internet Explorer VM]]></title>
    <link href="http://elgalu.github.io/2014/run-protractor-against-internet-explorer-vm/"/>
    <updated>2014-12-21T17:25:00-03:00</updated>
    <id>http://elgalu.github.io/2014/run-protractor-against-internet-explorer-vm</id>
    <content type="html"><![CDATA[<h2 id="step1">Step 1 - Get Virtualbox</h2>


<p>Is free and available on many platforms</p>

<p><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p>

<h2 id="step2">Step 2 - Get a free Windows Virtual Machine</h2>


<p>If you don&#8217;t have already a running Windows with IE you can quickly and legally go with this:</p>

<p><a href="http://modern.ie/en-us/virtualization-tools#downloads">http://modern.ie/en-us/virtualization-tools#downloads</a></p>

<p><img src="http://elgalu.github.io/images/virtualbox_for_linux_modernIE.png" title="VirtualBox images for Linux" alt="VirtualBox IE images" /></p>

<p>If, like me, you need to test against IE9, IE10, IE11 then you&#8217;ll need to download 2 VMs, one for each IE version, e.g.:</p>

<ul>
<li>IE9 - Win7</li>
<li>IE10 - Win7 (yes you can use good old Windows 7 instead of Win8)</li>
<li>IE11 - Win7 (yes you can use good old Windows 7 instead of Win8.1)</li>
</ul>


<h2 id="step3">Step 3 - Install Java on the windows VM</h2>


<p>Once you have your Windows VM up and running, you should ensure java is installed.
Install link here:</p>

<p><a href="http://www.java.com/en/download/index.jsp">http://www.java.com/en/download/index.jsp</a></p>

<p>You may need to retry this download a few times since Windows security scan gives troubles sometimes.</p>

<h2 id="step4">Step 4 - Disable protected mode on IE options among other things</h2>


<p>Go to Internet explorer options, follow these screen shots to get all setup:</p>

<p><img src="http://elgalu.github.io/images/IE11_options1_delete_browsing_history_on_exit.png" title="IE11_options1_delete_browsing_history_on_exit" alt="IE11_options1_delete_browsing_history_on_exit" /></p>

<p><img src="http://elgalu.github.io/images/IE11_options2_disable_protected_mode_all_zones.png" title="IE11_options2_disable_protected_mode_all_zones" alt="IE11_options2_disable_protected_mode_all_zones" /></p>

<p><img src="http://elgalu.github.io/images/IE11_options3_turn_OFF_popup_bloquer.png" title="IE11_options3_turn_OFF_popup_bloquer" alt="IE11_options3_turn_OFF_popup_bloquer" /></p>

<p><img src="http://elgalu.github.io/images/IE11_options4_disable_autocomplete.png" title="IE11_options4_disable_autocomplete" alt="IE11_options4_disable_autocomplete" /></p>

<p><img src="http://elgalu.github.io/images/IE11_options5_dont_check_certificates_and_erase_temporary_files.png" title="IE11_options5_dont_check_certificates_and_erase_temporary_files" alt="IE11_options5_dont_check_certificates_and_erase_temporary_files" /></p>

<p><img src="http://elgalu.github.io/images/IE11_options6_leave_warnings_unchecked.png" title="IE11_options6_leave_warnings_unchecked" alt="IE11_options6_leave_warnings_unchecked" /></p>

<h6 id="step4-ie10-or-less-only">Following an IE10 / IE9 / IE8 necessary option:</h6>


<p><img src="http://elgalu.github.io/images/IE10_disable_accelerator_button_on_selection.png" title="IE10_disable_accelerator_button_on_selection" alt="IE10_disable_accelerator_button_on_selection" /></p>

<h6 id="step4-ie11-auto-updates">Check &#8220;Install new versions automatically&#8221;</h6>


<p><img src="http://elgalu.github.io/images/IE11_check_Install_new_versions_automatically.png" title="IE11_check_Install_new_versions_automatically" alt="IE11_check_Install_new_versions_automatically" /></p>

<h2 id="step5">Step 5 - Download selenium standalone, latest</h2>


<p>As of this writing, latest selenium is 2.44.0, search latest at:</p>

<p><a href="http://selenium-release.storage.googleapis.com/index.html">http://selenium-release.storage.googleapis.com/index.html</a></p>

<p>Download these files in you windows VM:</p>

<p><a href="http://selenium-release.storage.googleapis.com/2.44/selenium-server-standalone-2.44.0.jar">http://selenium-release.storage.googleapis.com/2.44/selenium-server-standalone-2.44.0.jar</a></p>

<p><a href="http://selenium-release.storage.googleapis.com/2.44/IEDriverServer_Win32_2.44.0.zip">http://selenium-release.storage.googleapis.com/2.44/IEDriverServer_Win32_2.44.0.zip</a></p>

<p>We also need the IE driver, so by using 32 bits version and placing the extracted file into your windows path should get that ready. FYI people had <a href="http://stackoverflow.com/questions/21612643/protractor-internet-explorer-slowness">issues with 64 bits versions of the driver</a> so even on an 64 bits Windows machine I suggest you avoid using x64 driver, stick to 32 bits.</p>

<p>If your are unsure where to put the extracted file, copy <code>IEDriverServer.exe</code> to <code>C:\Windows\System32</code></p>

<h2 id="step6">Step 6 - Run IEDriverServer.exe manually</h2>


<p>Windows protected mode might be enabled, so run manually the file <code>IEDriverServer.exe</code>, but run it at the location path where you copied it, e.g. <code>C:\Windows\System32</code></p>

<p>Running that file will trigger the Windows security pop up so you can authorize the executable with <strong>Run anyway</strong> to get that remembered by Windows:</p>

<p><img src="http://elgalu.github.io/images/IEDriverServer_run_anyway_windows.png" title="IEDriverServer_run_anyway_windows" alt="IEDriverServer_run_anyway_windows" /></p>

<p>Then <em>Allow access</em> for it. This is more related to Windows firewall actually:</p>

<p><img src="http://elgalu.github.io/images/IEDriverServer_enable_firewall.png" title="IEDriverServer_enable_firewall" alt="IEDriverServer_enable_firewall" /></p>

<p><strong>IMPORTANT</strong> Close running <code>IEDriverServer.exe</code> now, this run was only to trigger Windows security and firewall dialogs.</p>

<h2 id="step7">Step 7 - Find out VM IP address</h2>


<p>You can do so by opening the Windows command prompt cmd.exe then type <code>ipconfig</code> a common port number given by VirtualBox to the VM is <strong>10.0.2.15</strong> and VMWare might look more like <strong>192.168.240.131</strong> but it varies on each environment.</p>

<p>Take note of the IP address and within your host machine edit <strong>/etc/hosts</strong> file too add a new entry, I use custom domain names <strong>ie11.dev</strong> and so on like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>192.168.240.131   ie11.dev
</span><span class='line'>192.168.240.132   ie10.dev
</span></code></pre></td></tr></table></div></figure>


<p>So within your Protractor project you will need a config file that points selenium to the proper URL, e.g. a file <strong>ie11.conf.js</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">capabilities</span><span class="p">.</span><span class="nx">browserName</span> <span class="o">=</span> <span class="s1">&#39;internet explorer&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">capabilities</span><span class="p">.</span><span class="nx">version</span> <span class="o">=</span> <span class="s1">&#39;11&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">seleniumAddress</span> <span class="o">=</span> <span class="s1">&#39;http://ie11.dev:4444/wd/hub&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<h2 id="step8">Step 8 - Write a .bat script to start selenium</h2>


<p>Within your Window VM, you should place this <code>ie11.bat</code> file in the same directory where you downloaded the selenium standalone jar, for example in your downloads folder.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> IE<span class="m">11</span> selenium machine
</span><span class='line'>java -jar selenium-server-standalone<span class="m">-2</span>.<span class="m">44</span>.<span class="m">0</span>.jar -port <span class="m">4444</span>
</span><span class='line'><span class="p">@</span><span class="k">pause</span>
</span></code></pre></td></tr></table></div></figure>




<h2 id="step9">Step 9 - Run ie11.bat</h2>


<p>Note port 4444 is the default selenium port, you can change it if needed. We need Windows firewall to add a rule to allow incoming connections to that port; accept all when the Firewall screen appears after running <code>ie11.bat</code></p>

<p><img src="http://elgalu.github.io/images/Windows_firewall_for_java.png" title="Windows_firewall_for_java" alt="Windows_firewall_for_java" /></p>

<p><strong>IMPORTANT</strong> Leave this script running on Windows machine. When you restart the VM you&#8217;ll have to manually start <code>ie11.bat</code> again unless you add it to the startup program list.</p>

<h2 id="step10">Step 10 - Configure protractor to use IE11</h2>


<p>We already saw this on step 7 but let&#8217;s look again with an alternative syntax:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">exports</span><span class="p">.</span><span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">seleniumAddress</span> <span class="o">=</span> <span class="s1">&#39;http://ie11.dev:4444/wd/hub&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">capabilities</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;browserName&#39;</span><span class="o">:</span> <span class="s1">&#39;internet explorer&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;platform&#39;</span><span class="o">:</span> <span class="s1">&#39;ANY&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="s1">&#39;version&#39;</span><span class="o">:</span> <span class="s1">&#39;11&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>




<h2 id="final-notes">Final notes and extras</h2>


<p>This isn&#8217;t the only way to run against IE machine, you could install nodejs there too and install protractor.</p>

<p>Also note, you can go a step further and setup a <a href="https://code.google.com/p/selenium/wiki/Grid2">selenium standalone grid</a> if you want to maintain a more complex infrastructure.</p>

<p>Steps to do that below.</p>

<h2 id="nodejs-win">Alternative 1 - Install nodejs on Windows</h2>


<p>Setting up protractor on Windows is quite doable, download first:</p>

<p><a href="http://nodejs.org/download/">http://nodejs.org/download/</a></p>

<p>And select Windows Installer of course. I recommend you choose 32 bits installers.
Follow setup wizard.</p>

<p>Once installed, open a Command Prompt or <code>CMD.EXE</code></p>

<p>Install protractor globally:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>npm install -g protractor
</span></code></pre></td></tr></table></div></figure>


<p>Make protractor download selenium and IE Driver for you:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>webdriver-manager update --ie
</span></code></pre></td></tr></table></div></figure>


<p>You can start selenium on a custom port if need by adding <code>--seleniumPort=4444</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'>webdriver-manager start
</span></code></pre></td></tr></table></div></figure>




<h2 id="grid2">Alternative 2 - Use Selenium Grid2</h2>


<p>Within the host machine, in my case Linux. Instead of running <code>webdriver-manager start</code> you can switch to a standalone grid, a.k.a &#8220;hub&#8221; by running this simple command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>java -jar selenium-server-standalone-2.44.0.jar -role hub -port 6666 -newSessionWaitTimeout 25000
</span></code></pre></td></tr></table></div></figure>


<p>Port <em>6666</em> is just an arbitrary one, you can stick with <em>4444</em> if you like but I prefer to state some difference.</p>

<p>Note you can get selenium standalone jar file with wget:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://selenium-release.storage.googleapis.com/2.44/selenium-server-standalone-2.44.0.jar
</span></code></pre></td></tr></table></div></figure>


<p>Also, you may need to open that port 6666 on your firewall, I did it with <code>ufw</code> in Ubuntu 13:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ufw allow 6666
</span></code></pre></td></tr></table></div></figure>


<p>So leave <code>java -jar selenium-server-standalone</code> command running in an open terminal, this is the selenium grid that nodes will connect to.</p>

<p>If you want to switch to a selenium grid, you will need to change <code>ie11.bat</code> file like below. Also note IP <strong>10.0.2.2</strong> is usually VirtualBox host machine IP address, VMWare IP might be <strong>192.168.240.1</strong> when using the NAT interface.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> IE<span class="m">11</span> selenium hub machine
</span><span class='line'><span class="k">set</span> <span class="nv">HUBURL</span><span class="o">=</span><span class="s2">&quot;http://10.0.2.2:6666/grid/register&quot;</span>
</span><span class='line'><span class="k">set</span> <span class="nv">BROWSERCAPS</span><span class="o">=</span><span class="s2">&quot;maxInstances=1,browserName=internet explorer,version=11&quot;</span>
</span><span class='line'>java -jar selenium-server-standalone<span class="m">-2</span>.<span class="m">44</span>.<span class="m">0</span>.jar -role node -hub <span class="nv">%HUBURL%</span> -port <span class="m">4444</span> -maxSession <span class="m">1</span> -browser <span class="nv">%BROWSERCAPS%</span>
</span><span class='line'><span class="p">@</span><span class="k">pause</span>
</span></code></pre></td></tr></table></div></figure>




<h4 id="grid2-issues">Troubleshooting Grid2</h4>


<p>Check the selenium grid logs, on your host machine (in my case Linux) to see if the output contains the following error or similar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>WARNING: Failed to check status of node: Connect to 10.0.2.15:4444 timed out
</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s the case when the firewall is blocking port 4444 on the guest VM.</p>

<p>If you can not work around it, considering moving your VM network setup from <strong>NAT</strong> to <strong>Bridged</strong>. Then you will have to find out the IP address of you host machine, in my case Linux, and replace <code>10.0.2.2</code> with that IP, e.g. <code>192.168.0.3</code></p>

<p>Networking setup details is are little beyond the scope of this post.</p>

<h3>Goodbye</h3>

<p>Hope this post helps you.</p>

<p>Have a good time writing e2e protractor tests !  :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add achievement badges to your gem README]]></title>
    <link href="http://elgalu.github.io/2013/add-achievement-badges-to-your-gem-readme/"/>
    <updated>2013-12-14T19:02:00-03:00</updated>
    <id>http://elgalu.github.io/2013/add-achievement-badges-to-your-gem-readme</id>
    <content type="html"><![CDATA[<p>I really enjoy crashing into a gem with a markdown-ready README file that includes top badges telling me things like the current available gem version, the fact that is continuously being tested using travis or knowing the developer cares about the gem dependencies being up-to-date!</p>

<p>Take a look how this looks like in <a href="https://github.com/wycats/thor#readme">thor</a> or some tiny <a href="https://github.com/elgalu/boolean_class#booleanclass">gem</a> of mine.</p>

<p>Achieving all that will take some steps, here is how:</p>

<h2>How the badges will look like</h2>

<p><a href="https://rubygems.org/gems/boolean_class"><img src="https://badge.fury.io/rb/boolean_class.png" alt="Gem Version" /></a>
<a href="https://travis-ci.org/elgalu/boolean_class"><img src="https://travis-ci.org/elgalu/boolean_class.png" alt="Build Status" /></a>
<a href="https://gemnasium.com/elgalu/boolean_class"><img src="https://gemnasium.com/elgalu/boolean_class.png" alt="Dependency Status" /></a>
<a href="https://codeclimate.com/github/elgalu/boolean_class"><img src="https://codeclimate.com/github/elgalu/boolean_class.png" alt="Code Climate" /></a>
<a href="https://coveralls.io/r/elgalu/boolean_class"><img src="https://coveralls.io/repos/elgalu/boolean_class/badge.png?branch=master" alt="Coverage Status" /></a></p>

<h2>Where to sign-up</h2>

<ul>
<li><p>For the gem version badge just <a href="http://guides.rubygems.org/command-reference/#gem_push">push to rubygems</a> at least 1 time and the badge will be there for you. Also, the &#8220;Version Badge&#8221; page offers an easy copy and paste builder of the URL that you can use <a href="http://badge.fury.io/for/rb/">here</a></p></li>
<li><p>For your build status go to <a href="https://travis-ci.org">Travis-CI.org</a> and follow the link &#8220;Sign in with GitHub&#8221;</p></li>
<li><p>For gem dependencies status <a href="https://gemnasium.com/users/auth/github">Signup at Gemnasium</a></p></li>
<li><p>For code quality stats <a href="https://codeclimate.com/github/signup">Signup at Code Climate</a></p></li>
<li><p>For coverage percentage first <a href="https://coveralls.io/authorize/github">Signup once at Coveralls</a> then for each of you projects go to the <a href="https://coveralls.io/repos/new">Add Repo page</a></p></li>
<li><p>For analytics <a href="http://www.google.com/analytics">Signup at Google Analytics</a> and <a href="http://githalytics.com/">Signup at githalytics</a></p></li>
<li><p>For pretty documentation generator read <a href="http://documentup.com">here</a>
or simply go to <code>documentup.com/your_github_user/your_repo_name</code></p></li>
</ul>


<h2>Getting your code ready to use them</h2>

<p>Gem version, code climate and gem dependencies do not require more work on your side besides pushing your updates to github, those services will take care of the rest.</p>

<h3>Travis-CI</h3>

<p>Add this <code>.travis.yml</code> file to your project root, change it depending on the ruby versions you are interested to support:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">language</span><span class="p">:</span> <span class="n">ruby</span>
</span><span class='line'><span class="ss">rvm</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span> <span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'>  <span class="o">-</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'>  <span class="o">-</span> <span class="n">jruby</span><span class="o">-</span><span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">9</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Coveralls with SimpleCov</h3>

<p>I use <a href="https://github.com/colszowka/simplecov">SimpleCov</a> for test coverage, coveralls gem take care of your badge,</p>

<p>Add necessary dependencies to your gemspec:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;simplecov&quot;</span><span class="p">,</span> <span class="s2">&quot;&gt;= 0.8.2&quot;</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s1">&#39;coveralls&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 0.7.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you use rspec, update your <code>spec_helper.rb</code> and add this lines to the very beginning:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;simplecov&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;coveralls&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">SimpleCov</span><span class="o">.</span><span class="n">formatter</span> <span class="o">=</span> <span class="ss">SimpleCov</span><span class="p">:</span><span class="ss">:Formatter</span><span class="o">::</span><span class="no">MultiFormatter</span><span class="o">[</span>
</span><span class='line'>  <span class="ss">SimpleCov</span><span class="p">:</span><span class="ss">:Formatter</span><span class="o">::</span><span class="no">HTMLFormatter</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">Coveralls</span><span class="p">:</span><span class="ss">:SimpleCov</span><span class="o">::</span><span class="no">Formatter</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'><span class="no">SimpleCov</span><span class="o">.</span><span class="n">start</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Update your README file</h2>

<p>Replace strings <strong>elgalu</strong> with your github user and <strong>boolean_class</strong> with your github repo name.
It&#8217;s probably a better idea that you use a templating tool for this like <a href="https://github.com/elgalu/gem-newgem">the one I built and use</a></p>

<pre><code># TODO: Your gem name

[![Gem Version][GV img]][Gem Version]
[![Build Status][BS img]][Build Status]
[![Dependency Status][DS img]][Dependency Status]
[![Code Climate][CC img]][Code Climate]
[![Coverage Status][CS img]][Coverage Status]

## Description

TODO: Your gem description

[Gem Version]: https://rubygems.org/gems/boolean_class
[Build Status]: https://travis-ci.org/elgalu/boolean_class
[travis pull requests]: https://travis-ci.org/elgalu/boolean_class/pull_requests
[Dependency Status]: https://gemnasium.com/elgalu/boolean_class
[Code Climate]: https://codeclimate.com/github/elgalu/boolean_class
[Coverage Status]: https://coveralls.io/r/elgalu/boolean_class

[GV img]: https://badge.fury.io/rb/boolean_class.png
[BS img]: https://travis-ci.org/elgalu/boolean_class.png
[DS img]: https://gemnasium.com/elgalu/boolean_class.png
[CC img]: https://codeclimate.com/github/elgalu/boolean_class.png
[CS img]: https://coveralls.io/repos/elgalu/boolean_class/badge.png?branch=master
</code></pre>

<p>Don&#8217;t forget to let me know if i&#8217;m missing new cool badges out there!</p>

<h2>Google Analytics</h2>

<p>I&#8217;ve recently added <a href="http://githalytics.com/">githalytics</a> service in order to have <a href="http://www.google.com/analytics/">Google Analytics</a> for each of my github repos. Note there is also <a href="https://bitdeli.com/">bitdeli</a> service but haven&#8217;t tested it yet, let me know if is better or more free.</p>

<p>To do so:</p>

<ol>
<li><p>Go to <a href="http://www.google.com/analytics/">Google Analytics</a> website and signup to get your Property ID, e.g.</p>

<pre><code> Default URL protocol: https://
 Default URL source..: github.com/elgalu/time_ago_in_words
</code></pre>

<p> You may also delete <code>github.com</code> from your GA <strong>Referral Exclusion List</strong></p></li>
<li><p>Go to <a href="http://githalytics.com/">githalytics</a> and sign up, e.g.</p>

<pre><code> TrackingCode[url]:  https://github.com/elgalu/time_ago_in_words
 TrackingCode[code]: UA-12345-12
</code></pre></li>
<li><p>Add the fake image badge that will send data for analytics purposes, e.g.</p>

<pre><code> [![githalytics.com alpha](https://cruel-carlota.pagodabox.com/3fe2425a26ab0ca00b5bc6acf817af59 "githalytics.com")](http://githalytics.com/elgalu/time_ago_in_words)
</code></pre></li>
</ol>


<p>That should be it. Remember to check later on Google Analytics site for the collected data, works like a charm!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSONP for Dummies]]></title>
    <link href="http://elgalu.github.io/2013/jsonp-for-dummies/"/>
    <updated>2013-03-08T23:54:00-03:00</updated>
    <id>http://elgalu.github.io/2013/jsonp-for-dummies</id>
    <content type="html"><![CDATA[<p>If you read <a href="http://en.wikipedia.org/wiki/JSONP">wikipedia</a> definition:</p>

<blockquote><p>JSONP or &#8220;JSON with padding&#8221; is a communication technique used in JavaScript. It provides a method to request data from a server in a different domain, something prohibited by typical web browsers because of the same origin policy.</p></blockquote>

<p>But let&#8217;s dig it right away with an example. I will use <a href="https://github.com/robertodecurnex/J50Npi">J50Npi</a> standalone javascript library for that.</p>

<h2>Step by Step Beginner&#8217;s Sample</h2>

<p>Say you want to client-side print the user&#8217;s Country IP using some external JSONP free service.</p>

<p>You can test that solution from your browser right now:</p>

<h4>1. Open your Browser</h4>

<h4>2. Open a non javascript intensive page; e.g. <a href="http://robertodecurnex.github.com/">Roberto&#8217;s blog</a></h4>

<h4>3. Open the console by pressing F12 or whatever key your browser use. You may need to select tab &#8216;Console&#8217; (tested on Chrome and Internet Explorer 10)</h4>

<h4>4. Paste the below code (within the console)</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// This line taken from J50Npi.min.js (within this repo)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">J50Npi</span><span class="o">=</span><span class="p">{</span><span class="nx">currentScript</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">getJSON</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">success</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="s2">&quot;J50Npi.success&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">d</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]))}</span><span class="nx">g</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentScript</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">currentScript</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">success</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// This is a WorldIP free geo-location database.</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">&quot;http://api.wipmania.com/jsonp&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// No specific data need to be sent there</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// We need a function callback to be executed after the response is received</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">callback</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">geodata</span><span class="p">){</span> <span class="nx">alert</span><span class="p">(</span><span class="nx">geodata</span><span class="p">.</span><span class="nx">address</span><span class="p">.</span><span class="nx">country</span><span class="p">);</span> <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// And here is the magic:</span>
</span><span class='line'><span class="nx">J50Npi</span><span class="p">.</span><span class="nx">getJSON</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">callback</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You should see an alert saying your current (ip based location) country name after half a second or so.</p>

<p><img src="http://elgalu.github.io/images/J50Npi_alert_sample.png" title="Optional title" alt="J50Npi IMG" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tools for creating your first ruby gem]]></title>
    <link href="http://elgalu.github.io/2013/tools-for-creating-your-first-ruby-gem/"/>
    <updated>2013-03-05T11:24:00-03:00</updated>
    <id>http://elgalu.github.io/2013/tools-for-creating-your-first-ruby-gem</id>
    <content type="html"><![CDATA[<p>This post is about tools you can use to turn your ruby idea into a ruby gem so you can share it with the ruby world.
I will use a tiny gem of mine <a href="https://github.com/elgalu/twitter_anonymous_client">twitter_anonymous_client</a> as a practical example and also use some power tools like <a href="http://yardoc.org/">yard</a> that may be overkill for this tiny project but nice to know when working on bigger projects later on.</p>

<h2>Gem Creation</h2>

<p>You have a couple of options to start your gem files and directory structure, you can choose to write all of if from scratch, copy &amp; paste from another gem source you liked, or use a bootstrap tool that does the work for you.</p>

<p>A popular option is using <a href="http://gembundler.com/v1.2/bundle_gem.html">bundle gem</a> <em>GEMNAME</em> to bootstrap your gem. I started with bundler but right after the third gem i got tired of being fixed to a template not so easy to customize without sticking my nose around <a href="https://github.com/carlhuda/bundler/tree/master/lib/bundler/templates/newgem">bundler</a> source.</p>

<p>So i partially extracted that into a gem called <a href="https://github.com/elgalu/gem-newgem">gem-newgem</a> and turned it into a RubyGems plugin which is what i will use in this post.</p>

<h3>Bootstrap your gem</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install gem-newgem
</span><span class='line'>Successfully installed gem-newgem-0.1.1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>gem new twitter_anonymous_client --summary <span class="s1">&#39;Twitter public (anonymous) client for old v1.0 API&#39;</span>
</span><span class='line'>      create  twitter_anonymous_client
</span><span class='line'>      create  twitter_anonymous_client/twitter_anonymous_client.gemspec
</span><span class='line'>      create  twitter_anonymous_client/.gitignore
</span><span class='line'>      create  twitter_anonymous_client/.rspec
</span><span class='line'>      create  twitter_anonymous_client/.travis.yml
</span><span class='line'>      create  twitter_anonymous_client/CHANGELOG.md
</span><span class='line'>      create  twitter_anonymous_client/Gemfile
</span><span class='line'>      create  twitter_anonymous_client/LICENSE.md
</span><span class='line'>      create  twitter_anonymous_client/README.md
</span><span class='line'>      create  twitter_anonymous_client/Rakefile
</span><span class='line'>      create  twitter_anonymous_client/lib/twitter_anonymous_client.rb
</span><span class='line'>      create  twitter_anonymous_client/lib/twitter_anonymous_client/version.rb
</span><span class='line'>      create  twitter_anonymous_client/spec/twitter_anonymous_client_spec.rb
</span><span class='line'>      create  twitter_anonymous_client/spec/spec_helper.rb
</span><span class='line'>INFO: Initializing git repo at twitter_anonymous_client/
</span><span class='line'>  git init
</span><span class='line'>Initialized empty Git repository in ~/twitter_anonymous_client/.git/
</span><span class='line'>  git add .
</span><span class='line'>INFO: Will add remote so you get ready to push to github
</span><span class='line'>  git remote add github git@github.com:elgalu/twitter_anonymous_client.git
</span><span class='line'>INFO: Make branch tracking automatic
</span><span class='line'>  git config --add branch.master.remote github
</span><span class='line'>  git config --add branch.master.merge refs/heads/master
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>twitter_anonymous_client
</span></code></pre></td></tr></table></div></figure>


<p>If you take a look at the files you will see how your <code>~/.gitconfig</code> information is used, the gem name you provided and the summary are used even in the README.md file.</p>

<p>This is how my <a href="https://github.com/elgalu/twitter_anonymous_client/blob/master/twitter_anonymous_client.gemspec">.gemspec</a> was generated, you&#8217;ll soon find out this is opinionated stuff, feel free to modify the <a href="https://github.com/elgalu/newgem-template">template</a> found at <code>~/.newgem-templates</code> to get the requirements you need:</p>

<figure class='code'><figcaption><span>.gemspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;twitter_anonymous_client/version&#39;</span>
</span><span class='line'><span class="ss">Gem</span><span class="p">:</span><span class="ss">:Specification</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span> <span class="o">|</span><span class="n">spec</span><span class="o">|</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">platform</span>      <span class="o">=</span> <span class="ss">Gem</span><span class="p">:</span><span class="ss">:Platform</span><span class="o">::</span><span class="no">RUBY</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">name</span>          <span class="o">=</span> <span class="s2">&quot;twitter_anonymous_client&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">version</span>       <span class="o">=</span> <span class="ss">TwitterAnonymousClient</span><span class="p">:</span><span class="ss">:VERSION</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">summary</span>       <span class="o">=</span> <span class="sx">%q{Twitter public (anonymous) client for old v1.0 API}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">description</span>   <span class="o">=</span> <span class="n">spec</span><span class="o">.</span><span class="n">summary</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">required_ruby_version</span>     <span class="o">=</span> <span class="s1">&#39;&gt;= 1.9.2&#39;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">required_rubygems_version</span> <span class="o">=</span> <span class="s1">&#39;&gt;= 1.8&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">license</span>       <span class="o">=</span> <span class="s1">&#39;MIT&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">authors</span>       <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Leo Gallucci&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">email</span>         <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;elgalu3@gmail.com&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">homepage</span>      <span class="o">=</span> <span class="s2">&quot;https://github.com/elgalu/twitter_anonymous_client&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">executables</span>   <span class="o">=</span> <span class="n">spec</span><span class="o">.</span><span class="n">files</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">%r{^bin/}</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="no">File</span><span class="o">.</span><span class="n">basename</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">files</span>         <span class="o">=</span> <span class="sb">`git ls-files`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="vg">$/</span><span class="p">)</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">test_files</span>    <span class="o">=</span> <span class="n">spec</span><span class="o">.</span><span class="n">files</span><span class="o">.</span><span class="n">grep</span><span class="p">(</span><span class="sr">%r{^(test|spec|features)/}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">require_paths</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;lib&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;bundler&quot;</span><span class="p">,</span> <span class="s2">&quot;&gt;= 1.2&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;rake&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;rspec&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 2.13&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;redcarpet&quot;</span><span class="p">,</span> <span class="s2">&quot;&gt;= 2.2&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;yard&quot;</span><span class="p">,</span> <span class="s2">&quot;&gt;= 0.8&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s2">&quot;simplecov&quot;</span><span class="p">,</span> <span class="s2">&quot;&gt;= 0.7.1&quot;</span>
</span><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_development_dependency</span> <span class="s1">&#39;coveralls&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 0.5.8&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I will just add one runtime dependency there:</p>

<figure class='code'><figcaption><span>Add to .gemspec</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">spec</span><span class="o">.</span><span class="n">add_runtime_dependency</span> <span class="s2">&quot;strongly_typed&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>By looking at the README.md file, you&#8217;ll see how much i like putting badges at the top of the doc.
You will need to sign-up to those services to get your gem up and running, i wrote another <a href="http://elgalu.github.com/2013/add-achievement-badges-to-your-gem-readme/">post</a> on how to do it.</p>

<h3>Spec first, code later</h3>

<p>First and foremost, check everything is working with bundler and rspec:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Why not, use the latest available ruby version (as of this writing)</span>
</span><span class='line'><span class="nv">$ </span>ruby -v
</span><span class='line'>ruby 2.0.0p0 <span class="o">(</span>2013-02-24 revision 39474<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Get your Gemfile.lock ready</span>
</span><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'>Using ...
</span><span class='line'>Installing ...
</span><span class='line'>Using twitter_anonymous_client <span class="o">(</span>0.0.1<span class="o">)</span> from <span class="nb">source</span> ...
</span><span class='line'>
</span><span class='line'><span class="c"># Let&#39;s see if some rake tasks are already available</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake -T
</span><span class='line'>rake build    <span class="c"># Build twitter_anonymous_client-0.0.1.gem into the pkg directory.</span>
</span><span class='line'>rake install  <span class="c"># Build and install twitter_anonymous_client-0.0.1.gem into system gems.</span>
</span><span class='line'>rake release  <span class="c"># Create tag v0.0.1 and build and push twitter_anonymous_client-0.0.1.gem to Rubygems</span>
</span><span class='line'>rake spec     <span class="c"># Run RSpec code examples</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Check the default task is to run the spec&#39;s</span>
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake
</span><span class='line'>...
</span><span class='line'>TwitterAnonymousClient
</span><span class='line'>  should have a version number
</span><span class='line'>
</span><span class='line'>Finished in 0.00537 seconds
</span><span class='line'>1 example, 0 failures
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>Everything nice so far!</p>

<p>Now is time to write about what we expect from this gem:</p>

<p>Create a spec file like <code>spec/user_timeline_spec.rb</code></p>

<figure class='code'><figcaption><span>spec/user_timeline_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:Client</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:screen_name</span><span class="p">)</span> <span class="p">{</span> <span class="s1">&#39;elgalu&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:client</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Twitter</span><span class="p">:</span><span class="ss">:Client</span><span class="o">.</span><span class="n">new</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:tweets</span><span class="p">)</span> <span class="p">{</span> <span class="n">client</span><span class="o">.</span><span class="n">user_timeline</span><span class="p">(</span><span class="n">screen_name</span><span class="p">,</span> <span class="ss">count</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:first_tweet</span><span class="p">)</span> <span class="p">{</span> <span class="n">tweets</span><span class="o">.</span><span class="n">first</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s1">&#39;#user_timeline&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">context</span> <span class="s1">&#39;first tweet&#39;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">it</span> <span class="s1">&#39;should be a Tweet&#39;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">first_tweet</span><span class="o">.</span><span class="n">should</span> <span class="n">be_a</span><span class="p">(</span><span class="ss">Twitter</span><span class="p">:</span><span class="ss">:Tweet</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">it</span> <span class="s1">&#39;should respond to id, text, created_at&#39;</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">first_tweet</span><span class="o">.</span><span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'>        <span class="n">first_tweet</span><span class="o">.</span><span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:text</span><span class="p">)</span>
</span><span class='line'>        <span class="n">first_tweet</span><span class="o">.</span><span class="n">should</span> <span class="n">respond_to</span><span class="p">(</span><span class="ss">:created_at</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&#8217;s leave out web mocking for now and expect those specs to run against real twitter servers.</p>

<p>Run <code>$ bundle exec rake spec</code> and watch it fail.</p>

<h3>Code to make the specs pass</h3>

<p>Good luck with that! &#8230;. or &#8230; take a look at <a href="https://github.com/elgalu/twitter_anonymous_client">twitter_anonymous_client</a> source code.</p>

<h2>Add documentation using <a href="http://yardoc.org/">yard</a></h2>

<p>Yard is really nice producing beauty documentation files, all you need to do is remember a few keywords:</p>

<figure class='code'><figcaption><span>Yard Doc Example</span><a href='http://rubydoc.info/gems/twitter_anonymous_client/Twitter/API/Timelines#user_timeline-instance_method'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Get some user timeline by screen name (last statuses)</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># @param [String] screen_name the twitter user slug</span>
</span><span class='line'><span class="c1"># @param [Hash] opts the options to retrieve the statuses</span>
</span><span class='line'><span class="c1"># @option opts [Integer] :count The number of statuses to retrieve</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># @example</span>
</span><span class='line'><span class="c1">#   Twitter::Client.new.user_timeline(&#39;DolarBlue&#39;, count: 1)</span>
</span><span class='line'><span class="c1">#   #=&gt; [#&lt;Twitter::Tweet:0x011.. @id=&quot;308609..., @text=&quot;Dolar Paralelo: $7,84.....</span>
</span><span class='line'><span class="k">def</span> <span class="nf">user_timeline</span><span class="p">(</span><span class="n">screen_name</span><span class="p">,</span> <span class="n">opts</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>You should always check how your documentation looks like from time to time
Run yard server! i will pass a different port cause i&#8217;m already using 8808 with something else:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>yard server --port 8828 --reload
</span><span class='line'>
</span><span class='line'><span class="o">[</span>info<span class="o">]</span>: No yardoc db found in .yardoc, parsing <span class="nb">source </span>before starting server...
</span><span class='line'>Files:           2
</span><span class='line'>...
</span><span class='line'>Methods:         1 <span class="o">(</span>    0 undocumented<span class="o">)</span>
</span><span class='line'> 33.33% documented
</span><span class='line'>&gt;&gt; YARD 0.8.4.1 documentation server at http://0.0.0.0:8828
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>Open your browser at (http://localhost:8828) and find some of your type errors ;)</p>

<h2>Publish your gem</h2>

<p>Ensure you have your github username configured:</p>

<pre><code>git config --global github.user your_user_name
</code></pre>

<h3>Only the first time on the your gem:</h3>

<pre><code>curl -u your_user_name https://rubygems.org/api/v1/api_key.yaml &gt; ~/.gem/credentials
### Enter host password for user 'your_user_name': ......
</code></pre>

<h3>Every time you push a gem release</h3>

<p>Follow these steps</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Commit your changes</span>
</span><span class='line'>git add ... <span class="o">&amp;&amp;</span> git commit ...
</span><span class='line'>
</span><span class='line'><span class="c"># Run specs on each ruby version you support to make sure everything works</span>
</span><span class='line'>rbenv shell 2.0.0-p0
</span><span class='line'>bundle <span class="nb">exec </span>rake spec
</span><span class='line'>rbenv shell 1.9.3-p392
</span><span class='line'>bundle <span class="nb">exec </span>rake spec
</span><span class='line'>
</span><span class='line'><span class="c"># Separate commit to bump version</span>
</span><span class='line'>git add ... version.rb
</span><span class='line'>git commit -m <span class="s1">&#39;Bump version to 0.0.1&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Tag your release</span>
</span><span class='line'>git tag -a v0.0.1 -m <span class="s1">&#39;Version 0.0.1&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Build your gem</span>
</span><span class='line'>gem build twitter_anonymous_client.gemspec
</span><span class='line'>
</span><span class='line'><span class="c"># Push to github</span>
</span><span class='line'>git remote add origin git@github.com:elgalu/twitter_anonymous_client.git
</span><span class='line'>
</span><span class='line'><span class="c"># Make tracking automatic</span>
</span><span class='line'>git config --add branch.master.remote origin
</span><span class='line'>git config --add branch.master.merge refs/heads/master
</span><span class='line'>
</span><span class='line'><span class="c"># Push updates and tags</span>
</span><span class='line'>git push origin master
</span><span class='line'>git push origin master --tags
</span><span class='line'>
</span><span class='line'><span class="c"># Push to rubygems</span>
</span><span class='line'>gem push twitter_anonymous_client-0.0.1.gem
</span><span class='line'><span class="c">#=&gt; Pushing gem to https://rubygems.org...</span>
</span><span class='line'><span class="c">#=&gt; Successfully registered gem: twitter_anonymous_client (0.0.1)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now tell ma you have your own ruby gem!</p>

<h2>More info</h2>

<p>If you need to go down into more details you can check:</p>

<ul>
<li><a href="https://github.com/radar/guides/blob/master/gem-development.md">radar guide on gem-development</a></li>
<li><a href="http://guides.rubygems.org/make-your-own-gem/">RubyGems guide</a></li>
<li><a href="http://mlomnicki.com/ruby/rubygems/2011/01/22/jeweler-vs-bundler.html">Jeweler vs Bundler for gem development</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Console Ruby debug is easy]]></title>
    <link href="http://elgalu.github.io/2013/console-ruby-debug-is-easy/"/>
    <updated>2013-03-01T13:11:00-03:00</updated>
    <id>http://elgalu.github.io/2013/console-ruby-debug-is-easy</id>
    <content type="html"><![CDATA[<p>How many times have you thought that debugging is difficult so instead of finding out how to do it you simply started adding <code>puts "var value: #{some_var}"</code> all over your code and even external gems code!</p>

<p>Well i have news for you guys, ruby debug from your terminal is easy.</p>

<p>All you need to start is requiring <code>'debug'</code> when calling your ruby script or ruby binary:</p>

<pre><code>ruby -r debug your_program.rb
</code></pre>

<p>Below, take a look at how i debugged <a href="https://github.com/wycats/thor">thor</a> gem to add a <a href="https://github.com/wycats/thor/pull/311">new config option</a>:</p>

<p>I executed some thor script with <code>ruby -rdebug script.rb</code> then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Set a breakpoint at directory.rb line 80:</span>
</span><span class='line'><span class="k">break</span> <span class="o">~</span><span class="sr">/.rbenv/</span><span class="n">versions</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="n">p0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">gems</span><span class="o">/</span><span class="n">thor</span><span class="o">-</span><span class="mi">0</span><span class="o">.</span><span class="mi">17</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">thor</span><span class="o">/</span><span class="n">actions</span><span class="o">/</span><span class="n">directory</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">80</span>
</span><span class='line'><span class="c1"># Now run until program ends or hits a breakpoint</span>
</span><span class='line'><span class="n">cont</span>
</span><span class='line'><span class="c1"># Take a look at the local variables after hitting that breakpoint:</span>
</span><span class='line'><span class="nb">local_variables</span>
</span><span class='line'><span class="c1">#=&gt; [:file_source, :file_destination, :dirname, :destination, :lookup]</span>
</span><span class='line'><span class="n">file_source</span>
</span><span class='line'><span class="c1">#=&gt; &quot;~/.newgem-templates/default/.git/description&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Play around in that console as you normally do with irb and..</p>

<p>have fun!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to run thor tasks from your ruby scripts]]></title>
    <link href="http://elgalu.github.io/2013/how-to-run-thor-tasks-from-your-ruby-scripts/"/>
    <updated>2013-02-26T15:10:00-03:00</updated>
    <id>http://elgalu.github.io/2013/how-to-run-thor-tasks-from-your-ruby-scripts</id>
    <content type="html"><![CDATA[<p>If you have a thor task defined in some file like i do:</p>

<div><script src='https://gist.github.com/5040554.js?file=newgem.thor'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>Normally, you would invoke this thor task <em>newgem</em> from the command-line like this:</p>

<pre><code>$ thor newgem some_name --test-framework rspec
</code></pre>

<p>But what if you need to do that from another ruby script?</p>

<p>Well, you can do so by passing the arguments directly, like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">args</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;some_name&quot;</span><span class="p">,</span> <span class="s2">&quot;--test-framework&quot;</span><span class="p">,</span> <span class="s2">&quot;rspec&quot;</span><span class="o">]</span>
</span><span class='line'><span class="no">Newgem</span><span class="o">.</span><span class="n">start</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using <a href="http://rdoc.info/github/wycats/thor/Thor/Base/ClassMethods#start-instance_method">start</a> is a way to go, but thor <a href="https://github.com/wycats/thor/blob/master/lib/thor/base.rb#L423">documentation</a> suggest using invoke() instead, like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">args</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;some_name&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">opts</span> <span class="o">=</span> <span class="p">{</span><span class="ss">:test_framework</span> <span class="o">=&gt;</span> <span class="s1">&#39;rspec&#39;</span><span class="p">}</span>
</span><span class='line'><span class="n">script</span> <span class="o">=</span> <span class="no">Newgem</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">args</span><span class="p">,</span> <span class="n">opts</span><span class="p">)</span>
</span><span class='line'><span class="n">script</span><span class="o">.</span><span class="n">invoke_all</span>
</span></code></pre></td></tr></table></div></figure>


<p>Good look with your ruby scripting!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When to use Ruby inheritance versus mixins]]></title>
    <link href="http://elgalu.github.io/2013/when-to-use-ruby-inheritance-versus-mixins/"/>
    <updated>2013-02-20T13:49:00-03:00</updated>
    <id>http://elgalu.github.io/2013/when-to-use-ruby-inheritance-versus-mixins</id>
    <content type="html"><![CDATA[<p>In Ruby, I prefer to use <a href="http://en.wikipedia.org/wiki/Inheritance_(computer_science)">inheritance</a> to establish a subtype from an existing object; to say for example that a Car is a kind of Vehicle.</p>

<p>But to use <a href="http://en.wikipedia.org/wiki/Mixin">mixins</a> as a way to reuse code.
Car and Aircraf, for example, are both kind of vehicles but a Car may include a Wheeled mechanism while an Aircraft an Air::Skied one:</p>

<figure class='code'><figcaption><span>Car and Aircraf both vehicles but Car includes a Wheeled mechanism while Aircraft an Air::Skied</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Vehicle</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Car</span> <span class="o">&lt;</span> <span class="no">Vehicle</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">TransportationMechanism</span><span class="p">:</span><span class="ss">:Land</span><span class="o">::</span><span class="no">Wheeled</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Aircraft</span> <span class="o">&lt;</span> <span class="no">Vehicle</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">TransportationMechanism</span><span class="p">:</span><span class="ss">:Air</span><span class="o">::</span><span class="no">Skied</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Decisions regarding what is what deeply depends on your <a href="http://en.wikipedia.org/wiki/Domain_knowledge">domain knowledge</a> so you&#8217;ll end up with a subjective solution hopefully producing a code nice to read then easy to understand.</p>
]]></content>
  </entry>
  
</feed>
